
let unlock = true;

//=================
//ActionsOnHash
if (location.hash) {
	const hsh = location.hash.replace('#', '');
	if (document.querySelector('.popup_' + hsh)) {
		popup_open(hsh);
	} else if (document.querySelector('div.' + hsh)) {
		_goto(document.querySelector('.' + hsh), 500, '');
	}
}
//=================
//Menu
let iconMenu = document.querySelector(".icon-menu");
if (iconMenu != null) {
	let delay = 500;
	let menuBody = document.querySelector(".menu__body");
	iconMenu.addEventListener("click", function (e) {
		if (unlock) {
			body_lock(delay);
			menuBody.style.display = 'flex';

		setTimeout(()=>{
			iconMenu.classList.toggle("_active");
			menuBody.classList.toggle("_active");
		},300)
		}
	});
};
function menu_close() {
	let iconMenu = document.querySelector(".icon-menu");
	let menuBody = document.querySelector(".menu__body");
	iconMenu.classList.remove("_active");
	menuBody.classList.remove("_active");
}
//=================
//BodyLock
function body_lock(delay) {
	let body = document.querySelector("body");
	if (body.classList.contains('_lock')) {
		body_lock_remove(delay);
	} else {
		body_lock_add(delay);
	}
}
function body_lock_remove(delay) {
	let body = document.querySelector("body");
	if (unlock) {
		let lock_padding = document.querySelectorAll("._lp");
		setTimeout(() => {
			for (let index = 0; index < lock_padding.length; index++) {
				const el = lock_padding[index];
				el.style.paddingRight = '0px';
			}
			body.style.paddingRight = '0px';
			body.classList.remove("_lock");
		}, delay);

		unlock = false;
		setTimeout(function () {
			unlock = true;
		}, delay);
	}
}
function body_lock_add(delay) {
	let body = document.querySelector("body");
	if (unlock) {
		let lock_padding = document.querySelectorAll("._lp");
		for (let index = 0; index < lock_padding.length; index++) {
			const el = lock_padding[index];
			el.style.paddingRight = window.innerWidth - document.querySelector('.wrapper').offsetWidth + 'px';
		}
		body.style.paddingRight = window.innerWidth - document.querySelector('.wrapper').offsetWidth + 'px';
		body.classList.add("_lock");

		unlock = false;
		setTimeout(function () {
			unlock = true;
		}, delay);
	}
}
//=================

const sendIt = document.querySelector('.contact_us_button');

/*---Общий код------------*/

/*---------cursor----------*/

const cursor = document.querySelector('#cursor');

document.addEventListener("mousemove" , e => {
    const  lengthY = e.clientY - cursor.offsetHeight/1.5 ;
    const  lengthX = e.clientX - cursor.offsetWidth/1.5 ;
    cursor.style.top = lengthY +'px';
    cursor.style.left = lengthX +'px';
})

function cursorHover(clas,nameid){
    const home = document.querySelectorAll('.'+clas);
    home.forEach( (el)=> {
        el.addEventListener('mouseenter', e => {
            cursor.id = `${nameid}`
            const  lengthY = e.clientY - cursor.offsetHeight/1.5 ;
            const  lengthX = e.clientX - cursor.offsetWidth/1.5 ;
            cursor.style.top = lengthY +'px';
            cursor.style.left = lengthX +'px';
        })
        el.addEventListener('mouseleave', e => {
            cursor.id = `${nameid}__cursor`
            const  lengthY = e.clientY - cursor.offsetHeight/1.5 ;
            const  lengthX = e.clientX - cursor.offsetWidth/1.5 ;
            cursor.style.top = lengthY +'px';
            cursor.style.left = lengthX +'px';
        })
    })
}

cursorHover('a','cursor__hover');
cursorHover('a_white','cursor__hover_white');
cursorHover('home_video_img','cursor__video_hover');
cursorHover('swiper-wrapper','cursor__slider_hover');
cursorHover('_stomatology__body_slider_swiper_slide','cursor__slider_hover');

/*--------Конец-cursor----------*/


/*-----------animation-transform3d--------*/

/*input не юзаем*/
/*в css нужно указать сталую высоту тега изменяющегося или задать сдесь elHeight в px*/

function transform3d(clas,elHeight=null){
    const transform3dA = document.querySelectorAll('.'+clas);
    transform3dA.forEach( (el)=> {
        el.classList.add('a_container_animation3d')
        if(elHeight){el.style.height = elHeight+ 'px' }
        let innerEl = el.innerHTML
        if(el.classList.contains('contact_us_button_3d')){
            if (sendIt.getAttribute('data-full') == 0) {
                innerEl = 'SEND IT';
            } else {
                innerEl = 'SEND AGAIN';
            }
        }
        const heightEl = el.offsetHeight
        el.innerHTML=`<div class="a_container_animation3d_3d ">
                        <div class="a_container_animation3d_default">
                        <div>${innerEl}</div>
                        </div>
                        <div class="a_container_animation3d_hover">
                        <div>${innerEl}</div>
                        </div></div> `
        el.querySelector('.a_container_animation3d_default').style.height = heightEl+'px'
    })
}
/*функция для простих ссилок типа а без бордера */
transform3d('header__sidebar_3d',37)
transform3d('footer__sidebar_3d',48)
/*функция для  ссилок c бордером */
transform3d('footer_3d_block2')
transform3d('footer_3d_block1')
transform3d('contact_us_button_3d')
transform3d('contact_us_tel_num_3d')
transform3d('our_works__body_button_3d')

/*----end-animation3d--------------*/



/*-----------animation-transform3d-for-input--------*/

function transform3dInput(inputclas,clas,elHeight=null){
    const transform3dA = document.querySelectorAll('.'+clas);
    transform3dA.forEach( (el)=> {
        el.classList.add('a_container_animation3d')
        if(elHeight){el.style.height = elHeight+ 'px' }
        let innerEl = el.innerHTML
        let labelEl=el.querySelector('label').innerHTML
        let input=el.querySelector('input')
        const heightEl = el.offsetHeight
        el.innerHTML=`<div class="input3d__container">
                            <div class="a_container_animation3d_3d ">
                                <div class="a_container_animation3d_default">
                                    <div class=${inputclas}>${labelEl}</div>
                                </div>
                                <div class="a_container_animation3d_hover">
                                    <div>${innerEl}</div>
                                </div>
                            </div>
                        </div> `
        if(input.hasAttribute('checked')){
            el.querySelector('.'+inputclas).classList.add('checked');
        }else{el.querySelector('.'+inputclas).classList.remove('checked');}
        el.querySelector('.a_container_animation3d_default').style.height = heightEl+'px'
    })
}

function inputChecked(inputclas,clas) {
    function isCheck(name,el) {
        return el.querySelector('input[name="' + name + '"]:checked');
    }
    const inputCheck = document.querySelectorAll('.'+clas);
    inputCheck.forEach(
        (el)=>{
            let input=el.querySelector('input')
            input.addEventListener('click',
                ()=> {
                    document.querySelectorAll('.'+inputclas).forEach((el)=>
                        el.classList.remove('checked')
                    )
                    if(isCheck('contact',el)){
                        el.querySelector('.'+inputclas).classList.add('checked');
                    }
                })
        }
    )
}

transform3dInput('input3d','header_input_3d')
inputChecked('input3d','header_input_3d')
transform3dInput('input3d__sidebar','sidebar_input_3d')
inputChecked('input3d__sidebar','sidebar_input_3d')

/*----------end-animation-transform3d-for-input--------*/

/*---Swiper---------*/
function myPlugin({ swiper, extendParams, on }) {
    extendParams({
        debugger: false,
    });

    on('init', () => {
        if (!swiper.params.debugger) return;
        //  console.log('init');
    });
    on('click', (swiper, e) => {
        if (!swiper.params.debugger) return;
        //  console.log('click');
    });
    on('tap', (swiper, e) => {
        if (!swiper.params.debugger) return;
        //  console.log('tap');
    });
    on('doubleTap', (swiper, e) => {
        if (!swiper.params.debugger) return;
        //  console.log('doubleTap');
    });
    on('sliderMove', (swiper, e) => {
        if (!swiper.params.debugger) return;
        lengthY = e.clientY - cursor.offsetHeight/1.5 ;
        lengthX = e.clientX - cursor.offsetWidth/1.5 ;
        cursor.style.top = lengthY +'px';
        cursor.style.left = lengthX +'px';
    });
    on('slideChange', () => {
        if (!swiper.params.debugger) return;
        /* console.log(
             'slideChange',
             swiper.previousIndex,
             '->',
             swiper.activeIndex
         );*/
    });
    on('slideChangeTransitionStart', () => {
        if (!swiper.params.debugger) return;
        // console.log('slideChangeTransitionStart');
    });
    on('slideChangeTransitionEnd', () => {
        if (!swiper.params.debugger) return;
        // console.log('slideChangeTransitionEnd');
    })//;
    on('transitionStart', () => {
        if (!swiper.params.debugger) return;
        // console.log('transitionStart');
    });
    on('transitionEnd', () => {
        if (!swiper.params.debugger) return;
        // console.log('transitionEnd');
    });
    on('fromEdge', () => {
        if (!swiper.params.debugger) return;
        // console.log('fromEdge');
    });
    on('reachBeginning', () => {
        if (!swiper.params.debugger) return;
        // console.log('reachBeginning');
    });
    on('reachEnd', () => {
        if (!swiper.params.debugger) return;
        // console.log('reachEnd');
    });
}
/*------End-Swiper---------*/

/*-----Конец Общего кода----------*/

//==============================================================

/*-------Код для index.html------------*/

if(document.querySelector('.home_video')){

    /*----------show-block-button-------*/

    if(sendIt) {
        const unshow = document.querySelector('.contact_us_subtitle_unshow');
        const unshow_p = document.querySelector('.contact_us_subtitle_unshow_p');
        const subt = document.querySelector('.contact_us_subtitle');
        const form = document.querySelector('.contact_us_subtitle_form');
        sendIt.addEventListener('click', () => {
            if (sendIt.getAttribute('data-full') == 0) {
                this.innerHTML = 'SEND AGAIN';
                unshow.classList.add('show_subtitle');
                unshow_p.classList.add('show_subtitle');
                sendIt.classList.add('show_subtitle');
                subt.classList.add('show_subtitle');
                form.classList.add('show_subtitle');
                sendIt.setAttribute('data-full', '1');
            } else {
                unshow.classList.remove('show_subtitle');
                unshow_p.classList.remove('show_subtitle');
                sendIt.classList.remove('show_subtitle');
                subt.classList.remove('show_subtitle');
                form.classList.remove('show_subtitle');
                this.innerHTML = 'SEND IT';
                sendIt.setAttribute('data-full', '0');
            }
            transform3d('contact_us_button_3d')
        })
    }
    /*----------end-show-block-button-------*/

    /*-----Бегущая строка----------*/

    function animateMarquee(el, duration) {
        const innerEl = el.querySelector('.marquee__inner');
        let innerWidth = innerEl.offsetWidth ;
        const cloneEl = innerEl.cloneNode(true);
        const cloneEl1 = innerEl.cloneNode(true);

        el.append(cloneEl);
        el.append(cloneEl1);

        let start = performance.now();
        let progress;
        let translateX;

        requestAnimationFrame(function step(now) {
            progress = (now - start) / duration;

            if (progress > 0.999) {
                progress %= 0.999;
                start = now ;
            }

            translateX = innerWidth * progress;

            innerEl.style.transform = `translate3d(-${translateX}px, 0 , 0)`;
            cloneEl.style.transform = `translate3d(-${translateX}px, 0 , 0)`;
            cloneEl1.style.transform = `translate3d(-${translateX}px, 0 , 0)`;

            requestAnimationFrame(step);
        });
    }

    const marquee1 = document.querySelector('#marquee1');
    const marquee2 = document.querySelector('#marquee2');
    const marquee3 = document.querySelector('#marquee3');
    const marquee4 = document.querySelector('#marquee4');

    animateMarquee(marquee1, 5000);
    animateMarquee(marquee2, 3000);
    animateMarquee(marquee3, 4000);
    animateMarquee(marquee4, 5000);

    /*-----end-Бегущая строка----------*/

    /*--------при наведении на строку----*/

    document.querySelectorAll('.our_works_string_hover1').forEach((el)=>{
        const imgel=el.querySelector('#img')
        el.addEventListener('mouseenter',()=>{
            const stomatology = el.querySelector('.our_works_string_hover_stomatology')
            stomatology.classList.add('our_works_string_hover_stomatology_active')
            el.addEventListener("mousemove" , e => {
                const   lengthY = e.clientY ;
                const  lengthX = e.clientX  + cursor.offsetWidth;
                imgel.style.top = lengthY +'px';
                imgel.style.left = lengthX +'px';
            })
        })
        el.addEventListener('mouseleave',()=>{
            const stomatology=el.querySelector('.our_works_string_hover_stomatology')
            stomatology.classList.remove('our_works_string_hover_stomatology_active')
            imgel.style.top = 0 +'px';
            imgel.style.left = -20000 +'px';
        })
    })

    /*--------end-при наведении на строку----*/

    /*------Swiper---------*/

    if (document.querySelector('.home_slider_swiper')){

        const swiper= new Swiper('.home_slider_swiper', {
            // Install Plugin To Swiper
            modules: [myPlugin],
            //  spaceBetween: 30,
            navigation: {
                nextEl: '.swiper-button-next1',
                prevEl: '.swiper-button-prev1',
            },
            // Enable debugger
            debugger: true,
        });

        /*--------------*/
//добавление к слайдеру первый слайд при мобилке
        const slidefaef = document.querySelector('._active_slide')
        const slidessascs = document.querySelector('.swiper-wrapper')
        const cloneEl = slidefaef.cloneNode(true);

        function addslide(){
            if ((window.innerWidth < 1050)&&(!cloneEl.classList.contains('_add_slide'))) {
                cloneEl.classList.add('home_slider_swiper_slide' ,'swiper-slide','_add_slide')
                cloneEl.classList.remove('_active_slide')
                cloneEl.id='swiper-slide';
                slidessascs.prepend(cloneEl)
                swiper.update()
                swiper.updateSize()
                swiper.updateSlides()

                new hoverEffect({
                    parent: cloneEl.querySelector('.'+'animation_transition_double_effect'),
                    intensity: 0.1,
                    imagesRatio: 360/276 ,
                    image1: 'img/home_slider/0.jpg',
                    image2: 'img/home_slider/1.jpg',
                    displacementImage: 'img/9.jpg'
                });
            }else{
                swiper.update()
                swiper.updateSize()
                swiper.updateSlides()
            }
        }

        window.addEventListener('resize', (e) => {
            addslide();
        })
        addslide();

        new hoverEffect({
            parent: document.querySelector('._active_slide').querySelector('.'+'animation_transition_double_effect'),
            intensity: 0.1,
            imagesRatio: 360/276 ,
            image1: 'img/home_slider/0.jpg',
            image2: 'img/home_slider/1.jpg',
            displacementImage: 'img/9.jpg'
        });

        /*----------------animation_with_hover-effect---------------*/

        function animation_with_hover_effect(clas,delay,hight,width,image1,image2,displacementImage){
            new hoverEffect({
                parent: document.querySelector('.'+clas),
                intensity: delay,
                imagesRatio: hight/width ,
                image1: image1,
                image2: image2,
                displacementImage: displacementImage
            });
        }

        animation_with_hover_effect('my-div',
            0.1, 620, 1194,
            'img/video.jpg','img/video0.jpg','img/9.jpg');

        animation_with_hover_effect('animation_transition_double_effect2',
            0.1, 360, 276,
            'img/home_slider/1.jpg', 'img/home_slider/1.jpg','img/9.jpg');

        animation_with_hover_effect('animation_transition_double_effect3',
            0.1, 360, 276,
            'img/home_slider/2.jpg', 'img/home_slider/2.jpg','img/9.jpg');

        animation_with_hover_effect('animation_transition_double_effect4',
            0.1, 360, 276,
            'img/home_slider/2.jpg', 'img/home_slider/2.jpg','img/9.jpg');

        /*-----------end-animation_with_hover-effect-------------------*/

    }
/*--Воспроизведение видео при навидении ----*/
     let video_container=document.querySelector('.my_video_container')
     let video =document.querySelector('.video_hover')


    video_container.addEventListener('mouseenter', e => {
        setTimeout(()=>{
            video.classList.add('_active');
            video.muted = true;
            video.play()
            setTimeout(()=>{
                video.pause()
                video.muted = false;
            },5100)
        },400)
    })
    video_container.addEventListener('mouseleave', e => {
        video.classList.remove('_active')
        video.pause()
        video.muted = false;
        video.load()
    })
    /*--End-Воспроизведение видео при навидении ------*/

}

/*------Конец-Кодa для index.html------------*/

//=============================================================

/*-------Код для case_page.html------------*/

const header__language = document.querySelector('.header__language')
const header__icon = document.querySelector('.header__icon')

if(document.querySelector('.stomatology_promo')){

    /*----stomatology__header*/

    function stomatology__header(){
        if(!header__language.classList.contains('stomatology__header')){
            header__language.classList.add('stomatology__header')
            header__icon.classList.add('stomatology__header')
        }
    }

    window.addEventListener('resize', (e) => {
        stomatology__header();
    })
    stomatology__header();

    /*---Конец-stomatology__header*/

    /*---Swiper*/

     new Swiper('._stomatology__body_slider_swiper', {
        // Install Plugin To Swiper
        modules: [myPlugin],
        //  spaceBetween: 30,
         pagination: {
             el: '.swiper-pagination',
             type: "fraction",
         },
        navigation: {
            nextEl: '.swiper-button-next1',
            prevEl: '.swiper-button-prev1',
        },
        // Enable debugger
        debugger: true,

    });

     //Swiper-progressbar

    let swiper_current = document.querySelector('.swiper-pagination-current');
    let swiper_total = document.querySelector('.swiper-pagination-total');
    let pag_prog = document.querySelector('.swiper_pagination_progressbar');
    let prog = document.querySelector('#progress');

    const observer = new MutationObserver(mutations => {
        let num = Number(swiper_current.innerHTML);
        let progMax = pag_prog.offsetWidth;
        let stepWidth = progMax / Number(swiper_total.innerHTML);
        let progWidth= num * stepWidth;
        prog.style.width = progWidth + 'px';
        prog.style.transition = 'all 0.3s';
    });

    observer.observe(swiper_current, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
    });


    /*--End-Swiper*/

    //-------- Select-------------
    let parent =document.querySelector('.custom-select')
    let header_button =document.querySelector('.custom-select__header')
    let select_items =document.querySelectorAll('.custom-select__list-item')

    header_button.addEventListener('click', ()=> {
        if(!parent.classList.contains('is-active')){
            parent.classList.add('is-active');
        }else {
            parent.classList.remove('is-active');
        }
    })
    select_items.forEach(
        (el)=>{
            el.addEventListener('click',
                ()=> {
                    select_items.forEach((el)=>
                        el.classList.remove('is-active')
                    )
                    el.classList.add('is-active');
                    document.querySelector('.custom-select__header-current').innerHTML = el.innerHTML;
                    parent.classList.remove('is-active');
                })
        }
    )

    //------End--Select

}else if(header__language.classList.contains('stomatology__header')){
    header__language.classList.remove('stomatology__header')
    header__icon.classList.remove('stomatology__header')
}

/*------Конец-Кодa для case_page.html------------*/
//====================================================
/*------Код для error_page.html------------*/
if(document.querySelector('.error_page')){
    let header = document.querySelector('.header')
    function headerNone(){
        if(window.innerWidth > 1050){
            header.style.maxHeight='0';
            header.style.overflow='hidden';
        }
        if(window.innerWidth <= 1050){
            header.style.maxHeight='100000px';
            header.style.overflow='visible';
        }
    }
    window.addEventListener('resize',()=>{headerNone()})
    headerNone()

    transform3d('error_page__title_button_3d')
}
/*------Конец-Кодa для error_page.html------------*/
