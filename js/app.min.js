
/*---Общий код------------*/

let unlock = true;

//=================
//Menu
let iconMenu = document.querySelector(".icon-menu");
if (iconMenu != null) {
    let delay = 500;
    let menuBody = document.querySelector(".menu__body");
    iconMenu.addEventListener("click", function (e) {
        if (unlock) {
            body_lock(delay);
            menuBody.style.display = 'flex';

            setTimeout(() => {
                iconMenu.classList.toggle("_active");
                menuBody.classList.toggle("_active");
            }, 300)
        }
    });
}
;

function menu_close() {
    let iconMenu = document.querySelector(".icon-menu");
    let menuBody = document.querySelector(".menu__body");
    iconMenu.classList.remove("_active");
    menuBody.classList.remove("_active");
}

//=================
//BodyLock
function body_lock(delay) {
    let body = document.querySelector("body");
    if (body.classList.contains('_lock')) {
        body_lock_remove(delay);
    } else {
        body_lock_add(delay);
    }
}

function body_lock_remove(delay) {
    let body = document.querySelector("body");
    if (unlock) {
        let lock_padding = document.querySelectorAll("._lp");
        setTimeout(() => {
            for (let index = 0; index < lock_padding.length; index++) {
                const el = lock_padding[index];
                el.style.paddingRight = '0px';
            }
            body.style.paddingRight = '0px';
            body.classList.remove("_lock");
        }, delay);

        unlock = false;
        setTimeout(function () {
            unlock = true;
        }, delay);
    }
}

function body_lock_add(delay) {
    let body = document.querySelector("body");
    if (unlock) {
        let lock_padding = document.querySelectorAll("._lp");
        for (let index = 0; index < lock_padding.length; index++) {
            const el = lock_padding[index];
            el.style.paddingRight = window.innerWidth - document.querySelector('.wrapper').offsetWidth + 'px';
        }
        body.style.paddingRight = window.innerWidth - document.querySelector('.wrapper').offsetWidth + 'px';
        body.classList.add("_lock");

        unlock = false;
        setTimeout(function () {
            unlock = true;
        }, delay);
    }
}

//=================

//для всех textarea увеличивать высоту относительно контента ввода

const tx = document.getElementsByTagName("textarea");
for (let i = 0; i < tx.length; i++) {
    tx[i].setAttribute("style", "height:" + (tx[i].scrollHeight) + "px;overflow-y:hidden;");
    tx[i].addEventListener("input", OnInput, false);
}

function OnInput() {
    this.style.height = "auto";
    this.style.height = (this.scrollHeight) + "px";
}

//====================================

const sendIt = document.querySelector('.contact_us_button');

/*---------cursor----------*/


const cursor = document.querySelector('#cursor');
const body_cursor = document.querySelector('body');

document.addEventListener("mousemove", e => {
    const lengthY = e.clientY - cursor.offsetHeight / 1.5;
    const lengthX = e.clientX - cursor.offsetWidth / 1.5;
    cursor.style.top = 0;
    cursor.style.left = 0;
    setTimeout(() => {
        body_cursor.style.setProperty('--x', `${lengthX / window.innerWidth * 100}vw`)
        body_cursor.style.setProperty('--y', `${lengthY / window.innerHeight * 100}vh`)
    }, 50)
})

function cursorHover(clas, nameid) {
    const home = document.querySelectorAll('.' + clas);
    home.forEach((el) => {
        el.addEventListener('mouseenter', e => {
            cursor.id = `${nameid}`
            cursor.style.top = 0;
            cursor.style.left = 0;
            const lengthY = e.clientY - cursor.offsetHeight / 1.5;
            const lengthX = e.clientX - cursor.offsetWidth / 1.5;
            body_cursor.style.setProperty('--x', `${lengthX / window.innerWidth * 100}vw`)
            body_cursor.style.setProperty('--y', `${lengthY / window.innerHeight * 100}vh`)

           switch (nameid){
               case 'cursor__hover' :  body_cursor.style.setProperty('--scale', `3.75`);break;
               case 'cursor__hover_white' :  body_cursor.style.setProperty('--scale', `3.75`);break;
               case 'cursor__video_hover' :  body_cursor.style.setProperty('--scale', `10`);break;
               case 'cursor__slider_hover' :  body_cursor.style.setProperty('--scale', `10`);break;
           }
        })
        el.addEventListener('mouseleave', e => {
            cursor.id = `${nameid}__cursor`;
            cursor.style.top = 0;
            cursor.style.left = 0;
            const lengthY = e.clientY - cursor.offsetHeight / 1.5;
            const lengthX = e.clientX - cursor.offsetWidth / 1.5;
            body_cursor.style.setProperty('--x', `${lengthX / window.innerWidth * 100}vw`)
            body_cursor.style.setProperty('--y', `${lengthY / window.innerHeight * 100}vh`)
            body_cursor.style.setProperty('--scale', `1`)
        })
    })
}

cursorHover('a', 'cursor__hover');
cursorHover('a_white', 'cursor__hover_white');
cursorHover('home_video_img', 'cursor__video_hover');
cursorHover('swiper-wrapper', 'cursor__slider_hover');
cursorHover('_stomatology__body_slider_swiper_slide', 'cursor__slider_hover');


/*--------Конец-cursor----------*/


/*-----------animation-transform3d--------*/

/*input не юзаем*/

/*в css нужно указать сталую высоту тега изменяющегося или задать сдесь elHeight в px*/

function transform3d(clas, elHeight = null) {
    const transform3dA = document.querySelectorAll('.' + clas);
    transform3dA.forEach((el) => {
        el.classList.add('a_container_animation3d')
        if (elHeight) {
            el.style.height = elHeight + 'px'
        }
        let innerEl = el.innerHTML
        if (el.classList.contains('contact_us_button_3d')) {
            if (sendIt.getAttribute('data-full') == 0) {
                innerEl = 'SEND IT';
            } else {
                innerEl = 'SEND AGAIN';
            }
        }
        const heightEl = el.offsetHeight
        el.innerHTML = `<div class="a_container_animation3d_3d ">
                        <div class="a_container_animation3d_default">
                        <div>${innerEl}</div>
                        </div>
                        <div class="a_container_animation3d_hover">
                        <div>${innerEl}</div>
                        </div></div> `
        el.querySelector('.a_container_animation3d_default').style.height = heightEl + 'px'
    })
}

/*функция для простих ссилок типа а без бордера */
transform3d('header__sidebar_3d', 37)
transform3d('footer__sidebar_3d', 48)
/*функция для  ссилок c бордером */
transform3d('footer_3d_block2')
transform3d('footer_3d_block1')
transform3d('contact_us_button_3d')
transform3d('contact_us_tel_num_3d')
transform3d('our_works__body_button_3d')

/*----end-animation3d--------------*/


/*-----------animation-transform3d-for-input--------*/

function transform3dInput(inputclas, clas, elHeight = null) {
    const transform3dA = document.querySelectorAll('.' + clas);
    transform3dA.forEach((el) => {
        el.classList.add('a_container_animation3d')
        if (elHeight) {
            el.style.height = elHeight + 'px'
        }
        let innerEl = el.innerHTML
        let labelEl = el.querySelector('label').innerHTML
        let input = el.querySelector('input')
        const heightEl = el.offsetHeight
        el.innerHTML = `<div class="input3d__container">
                            <div class="a_container_animation3d_3d ">
                                <div class="a_container_animation3d_default">
                                    <div class=${inputclas}>${labelEl}</div>
                                </div>
                                <div class="a_container_animation3d_hover">
                                    <div>${innerEl}</div>
                                </div>
                            </div>
                        </div> `

        el.addEventListener('click', () => {

        })
        if (input.hasAttribute('checked')) {
            el.querySelector('.' + inputclas).classList.add('checked');
        } else {
            el.querySelector('.' + inputclas).classList.remove('checked');
        }
        el.querySelector('.a_container_animation3d_default').style.height = heightEl + 'px'
    })
}

function inputChecked(inputclas, clas) {
    function isCheck(name, el) {
        return el.querySelector('input[name="' + name + '"]:checked');
    }

    const inputCheck = document.querySelectorAll('.' + clas);
    inputCheck.forEach(
        (el) => {
            let input = el.querySelector('input')
            input.addEventListener('click',
                () => {
                    document.querySelectorAll('.' + inputclas).forEach((el) =>
                        el.classList.remove('checked')
                    )
                    if (isCheck('contact', el)) {
                        el.querySelector('.' + inputclas).classList.add('checked');
                    }
                })
        }
    )
}

transform3dInput('input3d', 'header_input_3d')
inputChecked('input3d', 'header_input_3d')
transform3dInput('input3d__sidebar', 'sidebar_input_3d')
inputChecked('input3d__sidebar', 'sidebar_input_3d')

/*----------end-animation-transform3d-for-input--------*/

/*---Swiper---------*/
function myPlugin({swiper, extendParams, on}) {
    extendParams({
        debugger: false,
    });

    on('init', () => {
        if (!swiper.params.debugger) return;
        //  console.log('init');
    });
    on('click', (swiper, e) => {
        if (!swiper.params.debugger) return;
        //  console.log('click');
    });
    on('tap', (swiper, e) => {
        if (!swiper.params.debugger) return;
        //  console.log('tap');
    });
    on('doubleTap', (swiper, e) => {
        if (!swiper.params.debugger) return;
        //  console.log('doubleTap');
    });
    on('sliderMove', (swiper, e) => {
        if (!swiper.params.debugger) return;
        const lengthY = e.clientY - cursor.offsetHeight / 1.5;
        const lengthX = e.clientX - cursor.offsetWidth / 1.5;
        cursor.style.top = 0;
        cursor.style.left = 0;
        body_cursor.style.setProperty('--x', `${lengthX}px`)
        body_cursor.style.setProperty('--y', `${lengthY}px`)
    });
    on('slideChange', () => {
        if (!swiper.params.debugger) return;
        /* console.log(
             'slideChange',
             swiper.previousIndex,
             '->',
             swiper.activeIndex
         );*/
    });
    on('slideChangeTransitionStart', () => {
        if (!swiper.params.debugger) return;
        // console.log('slideChangeTransitionStart');
    });
    on('slideChangeTransitionEnd', () => {
        if (!swiper.params.debugger) return;
        // console.log('slideChangeTransitionEnd');
    })//;
    on('transitionStart', () => {
        if (!swiper.params.debugger) return;
        // console.log('transitionStart');
    });
    on('transitionEnd', () => {
        if (!swiper.params.debugger) return;
        // console.log('transitionEnd');
    });
    on('fromEdge', () => {
        if (!swiper.params.debugger) return;
        // console.log('fromEdge');
    });
    on('reachBeginning', () => {
        if (!swiper.params.debugger) return;
        // console.log('reachBeginning');
    });
    on('reachEnd', () => {
        if (!swiper.params.debugger) return;
        // console.log('reachEnd');
    });
}

/*------End-Swiper---------*/

//Поведение курсора на логотипе

const header_logo = document.querySelector('.header__icon_logo')
const header__icon2 = document.querySelector('.header__icon')

header__icon2.addEventListener('mouseenter', () => {
    setTimeout(() => {
        header_logo.classList.add('_active')
    }, 60)
    header__icon2.addEventListener("mousemove", e => {
        let lengthY = e.pageY - header_logo.offsetHeight / 2 - header_logo.getBoundingClientRect().top - pageYOffset;
        let lengthX = e.pageX - header_logo.offsetWidth / 2 - header_logo.getBoundingClientRect().left;
        lengthX = lengthX / 4;
        lengthY = lengthY / 4;
        setTimeout(() => {
            header_logo.style.setProperty('--x', `${lengthX / window.innerWidth * 100}vw`)
            header_logo.style.setProperty('--y', `${lengthY / window.innerHeight * 100}vh`)
        }, 50)
    })
})

header__icon2.addEventListener('mouseout', () => {
    header_logo.classList.remove('_active')
})

//===========================================

// End Поведение курсора на логотипе

const circle_20 = document.querySelectorAll('.circle_20')
if (circle_20){

circle_20.forEach((el)=>{
    const circle_2 = el.querySelector('#circle_20')
    el.addEventListener('mouseenter', () => {
        setTimeout(() => {
            circle_2.classList.add('_active')
        }, 51)
        el.addEventListener("mousemove", e => {
            let lengthY = e.pageY - circle_2.offsetHeight / 2 - el.getBoundingClientRect().top - pageYOffset;
            let lengthX = e.pageX - circle_2.offsetWidth / 2 - el.getBoundingClientRect().left;
            lengthX = lengthX /2;
            lengthY = lengthY /2;
            setTimeout(() => {
                circle_2.style.setProperty('--x', `${lengthX / window.innerWidth * 100}vw`)
                circle_2.style.setProperty('--y', `${lengthY / window.innerHeight * 100}vh`)
            }, 10)
        })
    })

    el.addEventListener('mouseout', () => {
        circle_2.classList.remove('_active')
    })
})

}

//End Поведение курсора на circle_20


//Поведение курсора на circle_20

/*-----Конец Общего кода----------*/

//==============================================================

/*-------Код для index.html------------*/

if (document.querySelector('.home_video')) {

 /*----------show-block-button-------*/

    if (sendIt) {
        const unshow = document.querySelector('.contact_us_subtitle_unshow');
        const unshow_p = document.querySelector('.contact_us_subtitle_unshow_p');
        const subt = document.querySelector('.contact_us_subtitle');
        const form = document.querySelector('.contact_us_subtitle_form');
        sendIt.addEventListener('click', () => {
            if (sendIt.getAttribute('data-full') == 0) {
                this.innerHTML = 'SEND AGAIN';
                unshow.classList.add('show_subtitle');
                unshow_p.classList.add('show_subtitle');
                sendIt.classList.add('show_subtitle');
                subt.classList.add('show_subtitle');
                form.classList.add('show_subtitle');
                sendIt.setAttribute('data-full', '1');
            } else {
                unshow.classList.remove('show_subtitle');
                unshow_p.classList.remove('show_subtitle');
                sendIt.classList.remove('show_subtitle');
                subt.classList.remove('show_subtitle');
                form.classList.remove('show_subtitle');
                this.innerHTML = 'SEND IT';
                sendIt.setAttribute('data-full', '0');
            }
            transform3d('contact_us_button_3d')
        })
    }
    /*----------end-show-block-button-------*/

    /*-----Бегущая строка----------*/

    function animateMarquee(el, duration) {
        const innerEl = el.querySelector('.marquee__inner');
        let innerWidth = innerEl.offsetWidth;
        const cloneEl = innerEl.cloneNode(true);
        const cloneEl1 = innerEl.cloneNode(true);

        el.append(cloneEl);
        el.append(cloneEl1);

        let start = performance.now();
        let progress;
        let translateX;

        requestAnimationFrame(function step(now) {
            progress = (now - start) / duration;

            if (progress > 0.999) {
                progress %= 0.999;
                start = now;
            }

            translateX = innerWidth * progress;

            innerEl.style.transform = `translate3d(-${translateX}px, 0 , 0)`;
            cloneEl.style.transform = `translate3d(-${translateX}px, 0 , 0)`;
            cloneEl1.style.transform = `translate3d(-${translateX}px, 0 , 0)`;

            requestAnimationFrame(step);
        });
    }

    const marquee1 = document.querySelector('#marquee1');
    const marquee2 = document.querySelector('#marquee2');
    const marquee3 = document.querySelector('#marquee3');
    const marquee4 = document.querySelector('#marquee4');

    animateMarquee(marquee1, 5000);
    animateMarquee(marquee2, 3000);
    animateMarquee(marquee3, 4000);
    animateMarquee(marquee4, 5000);

    /*-----end-Бегущая строка----------*/

    /*--------при наведении на строку----*/

    document.querySelectorAll('.our_works_string_hover1').forEach((el) => {
        el.addEventListener('mouseenter', () => {
            const stomatology = el.querySelector('.our_works_string_hover_stomatology')
            stomatology.classList.add('our_works_string_hover_stomatology_active')
        })
        el.addEventListener('mouseleave', () => {
            const stomatology = el.querySelector('.our_works_string_hover_stomatology')
            stomatology.classList.remove('our_works_string_hover_stomatology_active')
        })
    })

    const rotate_container = document.querySelectorAll('.img_container_rotate')

    rotate_container.forEach((el) => {

        const imgel = el.querySelector('#img')
        const imgel_dop = el.querySelector('.dop_img')
        const stomatology = el.querySelector('.our_works_string_hover_stomatology')
        let mouseIn = false;
        document.addEventListener("mousemove", e => {
            const lengthY = e.clientY - el.getBoundingClientRect().top + el.offsetHeight / 4;
            const lengthX = e.clientX - el.getBoundingClientRect().left + imgel.offsetWidth / 4;
            let rotate_deg;
            const stomatology_centr = stomatology.getBoundingClientRect().left + stomatology.offsetWidth / 4;
            const stomatology_step = stomatology.offsetWidth / 20;
            const delta_length = lengthX - stomatology_centr;
            rotate_deg = delta_length / stomatology_step;

            imgel.style.setProperty('--rotate_x', `${lengthX / 1.5 + rotate_deg + imgel.offsetWidth / 5}px`)
            imgel.style.setProperty('--rotate_y', `${lengthY - 300}px`)

            imgel.style.setProperty('--rotate', `${rotate_deg}deg`)

            setTimeout(() => {
                if (mouseIn) {
                    imgel_dop.style.opacity = '1';
                    imgel.style.opacity = '1';
                    imgel.style.zIndex = '100';
                    imgel_dop.style.transform = ' scale(1)';
                }
            }, 400)

        })

        el.addEventListener('mouseenter', (e) => {
            mouseIn = true;

            const lengthY = e.clientY - el.getBoundingClientRect().top + el.offsetHeight / 4;
            const lengthX = e.clientX - el.getBoundingClientRect().left + imgel.offsetWidth / 4;
            let rotate_deg;
            const stomatology_centr = stomatology.getBoundingClientRect().left + stomatology.offsetWidth / 4;
            const stomatology_step = stomatology.offsetWidth / 20;
            const delta_length = lengthX - stomatology_centr;
            rotate_deg = delta_length / stomatology_step;

            imgel.style.setProperty('--rotate', `${rotate_deg}deg`)
            imgel.style.setProperty('--rotate_x', `${lengthX / 1.5 + rotate_deg + imgel.offsetWidth / 5}px`)
            imgel.style.setProperty('--rotate_y', `${lengthY - 300}px`)
            setTimeout(() => {
                if (mouseIn) {
                    imgel.classList.add('_active')
                }
            }, 520)
        })
        el.addEventListener('mouseleave', (e) => {
            mouseIn = false;
            setTimeout(() => {
                if (!mouseIn) {
                    imgel.classList.remove('_active')
                }
            }, 520)

            const lengthY = e.clientY - el.getBoundingClientRect().top + el.offsetHeight / 4;
            const lengthX = e.clientX - el.getBoundingClientRect().left + imgel.offsetWidth / 4;

            imgel.style.setProperty('--rotate_x', `${lengthX}px`)
            imgel.style.setProperty('--rotate_y', `${lengthY}px`)

            imgel_dop.style.opacity = '0';
            imgel.style.opacity = '0';
            imgel.style.zIndex = '-100';
            imgel_dop.style.transform = 'scale(0.5)';
        })
        imgel.addEventListener('mouseenter', () => {
            imgel.classList.remove('_active')
            imgel_dop.style.opacity = '0';
            imgel.style.opacity = '0';
            imgel.style.zIndex = '-100';
            imgel_dop.style.transform = 'scale(0.5)';
        })
    })

    /*--------end-при наведении на строку----*/

    /*------Swiper---------*/

    if (document.querySelector('.home_slider_swiper')) {

        const swiper = new Swiper('.home_slider_swiper', {
            // Install Plugin To Swiper
            modules: [myPlugin],
            //  spaceBetween: 30,
            navigation: {
                nextEl: '.swiper-button-next1',
                prevEl: '.swiper-button-prev1',
            },
            // Enable debugger
            debugger: true,
        });

        /*--------------*/
//добавление к слайдеру первый слайд при мобилке
        const slidefaef = document.querySelector('._active_slide')
        const slidessascs = document.querySelector('.swiper-wrapper')
        const cloneEl = slidefaef.cloneNode(true);

        function addslide() {
            if ((window.innerWidth < 1050) && (!cloneEl.classList.contains('_add_slide'))) {
                cloneEl.classList.add('home_slider_swiper_slide', 'swiper-slide', '_add_slide')
                cloneEl.classList.remove('_active_slide')
                cloneEl.id = 'swiper-slide';
                slidessascs.prepend(cloneEl)
                swiper.update()
                swiper.updateSize()
                swiper.updateSlides()

                new hoverEffect({
                    parent: cloneEl.querySelector('.' + 'animation_transition_double_effect'),
                    intensity: 0.1,
                    imagesRatio: 360 / 276,
                    image1: 'img/home_slider/0.jpg',
                    image2: 'img/home_slider/1.jpg',
                    displacementImage: 'img/4.png'
                });
            } else {
                swiper.update()
                swiper.updateSize()
                swiper.updateSlides()
            }
        }

        window.addEventListener('resize', (e) => {
            addslide();
        })
        addslide();

        new hoverEffect({
            parent: document.querySelector('._active_slide').querySelector('.' + 'animation_transition_double_effect'),
            intensity: 0.1,
            imagesRatio: 360 / 276,
            image1: 'img/home_slider/0.jpg',
            image2: 'img/home_slider/1.jpg',
            displacementImage: 'img/4.png'
        });

        /*----------------animation_with_hover-effect---------------*/

        function animation_with_hover_effect(clas, delay, hight, width, image1, image2, displacementImage) {
            new hoverEffect({
                parent: document.querySelector('.' + clas),
                intensity: delay,
                imagesRatio: hight / width,

                image1: image1,
                image2: image2,
                displacementImage: displacementImage
            });
        }

        animation_with_hover_effect('my-div',
            0.1, 620, 1194,
            'img/video.jpg', 'img/video0.jpg', 'img/4.png');

        /*
        сделал выше для клона слайда
        animation_with_hover_effect('animation_transition_double_effect',
            0.1, 360, 276,
            'img/home_slider/0.jpg', 'img/home_slider/1.jpg','img/9.jpg');
        */

        animation_with_hover_effect('animation_transition_double_effect2',
            0.1, 360, 276,
            'img/home_slider/1.jpg', 'img/home_slider/1_1.jpg', 'img/4.png');

        animation_with_hover_effect('animation_transition_double_effect3',
            0.1, 360, 276,
            'img/home_slider/1.jpg', 'img/home_slider/1_1.jpg', 'img/4.png');

        animation_with_hover_effect('animation_transition_double_effect4',
            0.1, 360, 276,
            'img/home_slider/1.jpg', 'img/home_slider/1_1.jpg', 'img/4.png');
     animation_with_hover_effect('animation_transition_double_effect5',
            0.1, 360, 276,
            'img/home_slider/2.jpg', 'img/home_slider/1_1.jpg', 'img/4.png');

        /*-----------end-animation_with_hover-effect-------------------*/

    }

    /*--Воспроизведение видео при навидении ----*/

    let video_container = document.querySelector('.my_video_container')
    let video = document.querySelector('.video_hover')
    let video_show = false;
    video_container.addEventListener('mouseenter', e => {
        video_show = true
        showvideo(0)

        function showvideo(timer) {
            setTimeout(() => {
                if (video_show) {
                    video.classList.add('_active');
                    video.muted = true;
                    video.currentTime = timer;
                    video.play()
                    video.addEventListener("timeupdate", function () {
                        if (this.currentTime >= (timer + 5)) {
                            this.pause();
                        }
                    });
                }
            }, 400)
        }
    })
    video_container.addEventListener('mouseleave', e => {
        video_show = false
        video.classList.remove('_active')
        video.pause()
        video.muted = false;
        video.load()
    })
    /*--End-Воспроизведение видео при навидении ------*/
}

/*------Конец-Кодa для index.html------------*/

//=============================================================

/*-------Код для case_page.html------------*/

const header__language = document.querySelector('.header__language')
const header__icon = document.querySelector('.header__icon')

if (document.querySelector('.stomatology_promo')) {

    /*----stomatology__header*/

    function stomatology__header() {
        if (!header__language.classList.contains('stomatology__header')) {
            header__language.classList.add('stomatology__header')
            header__icon.classList.add('stomatology__header')
        }
    }

    window.addEventListener('resize', (e) => {
        stomatology__header();
    })
    stomatology__header();

    /*---Конец-stomatology__header*/

    /*---Swiper*/

    new Swiper('._stomatology__body_slider_swiper', {
        // Install Plugin To Swiper
        modules: [myPlugin],
        //  spaceBetween: 30,
        pagination: {
            el: '.swiper-pagination',
            type: "fraction",
        },
        navigation: {
            nextEl: '.swiper-button-next1',
            prevEl: '.swiper-button-prev1',
        },
        // Enable debugger
        debugger: true,

    });

    //Swiper-progressbar

    let swiper_current = document.querySelector('.swiper-pagination-current');
    let swiper_total = document.querySelector('.swiper-pagination-total');
    let pag_prog = document.querySelector('.swiper_pagination_progressbar');
    let prog = document.querySelector('#progress');

    const observer = new MutationObserver(mutations => {
        let num = Number(swiper_current.innerHTML);
        let progMax = pag_prog.offsetWidth;
        let stepWidth = progMax / Number(swiper_total.innerHTML);
        let progWidth = num * stepWidth;
        prog.style.width = progWidth + 'px';
        prog.style.transition = 'all 0.3s';
    });

    observer.observe(swiper_current, {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
    });

    /*--End-Swiper*/

    //-------- Select-------------
    let parent = document.querySelector('.custom-select')
    let header_button = document.querySelector('.custom-select__header')
    let select_items = document.querySelectorAll('.custom-select__list-item')

    header_button.addEventListener('click', () => {
        if (!parent.classList.contains('is-active')) {
            parent.classList.add('is-active');
        } else {
            parent.classList.remove('is-active');
        }
    })
    select_items.forEach(
        (el) => {
            el.addEventListener('click',
                () => {
                    select_items.forEach((el) =>
                        el.classList.remove('is-active')
                    )
                    el.classList.add('is-active');
                    document.querySelector('.custom-select__header-current').innerHTML = el.innerHTML;
                    parent.classList.remove('is-active');
                })
        }
    )

    //------End--Select

} else if (header__language.classList.contains('stomatology__header')) {
    header__language.classList.remove('stomatology__header')
    header__icon.classList.remove('stomatology__header')
}

/*------Конец-Кодa для case_page.html------------*/
//====================================================
/*------Код для error_page.html------------*/
if (document.querySelector('.error_page')) {
    let header = document.querySelector('.header')

    function headerNone() {
        if (window.innerWidth > 1050) {
            header.style.maxHeight = '0';
            header.style.overflow = 'hidden';
        }
        if (window.innerWidth <= 1050) {
            header.style.maxHeight = '100000px';
            header.style.overflow = 'visible';
        }
    }

    window.addEventListener('resize', () => {
        headerNone()
    })
    headerNone()

    transform3d('error_page__title_button_3d')
}
/*------Конец-Кодa для error_page.html------------*/
